//------------------------------------------------------------------------------
// <auto-generated>
//     This code was not generated by a tool. but for stylecop suppression.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;
using StrixIT.Platform.Core;

namespace StrixIT.Platform.Modules.Cms.Tests
{
    [TestClass]
    public class EntityHelperTests
    {
        #region Public Methods

        [ClassInitialize]
        public static void Init(TestContext context)
        {
            TestHelpers.MockUtilities();
            new StructureMapDependencyInjector();
            CmsInitializer.ConfigureEntityMaps();
        }

        [TestMethod]
        public void GetEntityTypeIdShouldReturnCorrectId()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            var id = helper.GetEntityTypeId(typeof(Html));
            Assert.AreEqual(EntityServicesTestData.HtmlEntityTypeId, id);
        }

        [TestMethod]
        public void GetTypeUsingEntityIdShouldReturnCorrectType()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            var type = helper.GetEntityType(EntityServicesTestData.HtmlEntityTypeId);
            Assert.AreEqual(typeof(Html), type);
        }

        [TestMethod]
        public void IsServiceActiveShouldReturnFalseForNonActiveService()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            var result = helper.IsServiceActive(typeof(Html), "Versioning");
            Assert.IsFalse(result);
        }

        [TestMethod]
        public void IsServiceActiveShouldReturnTrueForActiveService()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            var result = helper.IsServiceActive(typeof(Html), "Translations");
            Assert.IsTrue(result);
        }

        [TestMethod]
        public void MappingAnEntityToAListModelShouldMapTheUrl()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            EntityHelper.SetHelper(helper);
            var content = EntityServicesTestData.FirstNewsContentEn.Map<NewsListModel>();
            var result = content.Map<NewsListModel>();
            Assert.AreEqual(EntityServicesTestData.FirstNewsContentEn.Entity.Url, result.Url);
        }

        [TestMethod]
        public void ObjectMapShouldReturnProperObjectMap()
        {
            var helper = new DefaultEntityHelper(EntityServicesTestData.EntityTypes);
            var map = helper.GetObjectMap(typeof(News));
            Assert.AreEqual(typeof(News), map.ContentType);
            Assert.AreEqual(typeof(NewsViewModel), map.ViewModelType);
            Assert.AreEqual(typeof(NewsListModel), map.ListModelType);
        }

        #endregion Public Methods
    }
}