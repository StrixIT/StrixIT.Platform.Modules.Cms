////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was not generated by a tool. but for stylecop suppression.
//// </auto-generated>
////------------------------------------------------------------------------------
using System;
using System.Collections.Generic;

namespace StrixIT.Platform.Modules.Cms.Tests
{
    public static class EntityServicesTestData
    {
        #region Ids

        public static Guid AdministratorId
        {
            get
            {
                return Guid.Parse("BDE59C66-4336-486D-AFE9-FA56F4577633");
            }
        }

        public static Guid DiverImageId
        {
            get
            {
                return Guid.Parse("2E4D75CC-74C5-4679-959E-B65A54E38CA1");
            }
        }

        public static Guid DivingEditorId
        {
            get
            {
                return Guid.Parse("3848C875-505A-4930-9158-A6FEAAAFDD77");
            }
        }

        public static Guid DivingGroupId
        {
            get
            {
                return Guid.Parse("341CBA9A-64B0-403D-9EA2-AB7EC6CEC704");
            }
        }

        public static Guid FirstNewsContentDeId
        {
            get
            {
                return Guid.Parse("6EC773E7-04A8-4C59-AA8D-4A6D6842FE02");
            }
        }

        public static Guid FirstNewsContentEnDeletedId
        {
            get
            {
                return Guid.Parse("57FA76F5-926E-4612-A3AB-723579BAF320");
            }
        }

        public static Guid FirstNewsContentEnId
        {
            get
            {
                return Guid.Parse("E321455A-5EA2-45DC-8467-9267EEBB2D71");
            }
        }

        public static Guid FirstNewsContentEnV2Id
        {
            get
            {
                return Guid.Parse("0A7FA408-977D-45AB-B51E-652D2C9F0C8A");
            }
        }

        public static Guid FirstNewsContentNlId
        {
            get
            {
                return Guid.Parse("EDF18A19-8014-4F2E-9A95-459C467ACB7B");
            }
        }

        public static Guid FirstNewsEntityId
        {
            get
            {
                return Guid.Parse("60C49483-AEBC-4504-B789-215CAE872C95");
            }
        }

        public static Guid HtmlEntityTypeId
        {
            get
            {
                return Guid.Parse("9616F62B-026D-4184-8CBB-2A78F517036F");
            }
        }

        public static Guid KarateImageId
        {
            get
            {
                return Guid.Parse("86559403-764A-482F-B18C-0F3EFBA9DFDB");
            }
        }

        public static Guid NewsEntityTypeId
        {
            get
            {
                return Guid.Parse("D1C980F9-52F7-4D1A-A632-7385412E2F87");
            }
        }

        public static Guid PigImageId
        {
            get
            {
                return Guid.Parse("2711D8A2-C59F-4B17-A6B4-4926E7A0B397");
            }
        }

        public static Guid SecondNewsContentEnId
        {
            get
            {
                return Guid.Parse("F1726F15-73D0-453F-845A-CF79D5D91CAF");
            }
        }

        public static Guid SecondNewsContentNlId
        {
            get
            {
                return Guid.Parse("AD9F5531-8A47-4633-B483-54A36E3CB82D");
            }
        }

        public static Guid SecondNewsEntityId
        {
            get
            {
                return Guid.Parse("858C8DFB-056B-4A66-9364-6B9B159F21C5");
            }
        }

        public static Guid ThirdNewsContentDeId
        {
            get
            {
                return Guid.Parse("88E8ADAE-DB63-4F8F-AAE4-E14C00DCF0D5");
            }
        }

        public static Guid ThirdNewsEntityId
        {
            get
            {
                return Guid.Parse("1C6966D9-B0D6-47D5-B269-79062C055CDD");
            }
        }

        #endregion Ids

        #region Entity Types

        public static IList<EntityType> EntityTypes
        {
            get
            {
                return new List<EntityType> { HtmlEntityType, NewsEntityType };
            }
        }

        public static EntityType HtmlEntityType
        {
            get
            {
                return new EntityType
                {
                    Id = HtmlEntityTypeId,
                    Name = "StrixIT.Platform.Modules.Cms.Html",
                    EntityTypeServiceActions = new List<EntityTypeServiceAction>
                    {
                        new EntityTypeServiceAction
                        {
                            Action = "Translations",
                            GroupId = TestHelpers.CurrentUserCurrentGroupId
                        }
                    }
                };
            }
        }

        public static EntityType NewsEntityType
        {
            get
            {
                return new EntityType
                {
                    Id = NewsEntityTypeId,
                    Name = "StrixIT.Platform.Modules.Cms.News",
                };
            }
        }

        #endregion Entity Types

        #region Entities

        public static IList<PlatformEntity> Entities
        {
            get
            {
                return new List<PlatformEntity> { FirstNewsEntity, SecondNewsEntity, ThirdNewsEntity };
            }
        }

        public static PlatformEntity FirstNewsEntity
        {
            get
            {
                return new PlatformEntity
                {
                    Id = FirstNewsEntityId,
                    Url = "first-news",
                    EntityType = NewsEntityType,
                    EntityTypeId = NewsEntityTypeId,
                    OwnerUserId = AdministratorId,
                    Tags = new List<Term>
                    {
                        new Term
                        {
                            Name = "Test"
                        }
                    }
                };
            }
        }

        public static PlatformEntity SecondNewsEntity
        {
            get
            {
                return new PlatformEntity
                {
                    Id = SecondNewsEntityId,
                    Url = "second-news",
                    EntityType = NewsEntityType,
                    EntityTypeId = NewsEntityTypeId,
                    GroupId = DivingGroupId,
                    OwnerUserId = DivingEditorId,
                    Tags = new List<Term>()
                };
            }
        }

        public static PlatformEntity ThirdNewsEntity
        {
            get
            {
                return new PlatformEntity
                {
                    Id = ThirdNewsEntityId,
                    Url = "dreiten-neues",
                    EntityType = NewsEntityType,
                    EntityTypeId = NewsEntityTypeId,
                    GroupId = DivingGroupId,
                    OwnerUserId = DivingEditorId,
                    Tags = new List<Term>()
                };
            }
        }

        #endregion Entities

        #region Content

        public static IList<News> Content
        {
            get
            {
                return new List<News> { FirstNewsContentEn, FirstNewsContentEnV2, FirstNewsContentEnDeleted, FirstNewsContentNl, FirstNewsContentDe, SecondNewsContentEn, SecondNewsContentNl, ThirdNewsContentDe };
            }
        }

        public static News FirstNewsContentDe
        {
            get
            {
                return new News
                {
                    Id = FirstNewsContentDeId,
                    Culture = "de",
                    VersionNumber = 1,
                    EntityId = FirstNewsEntityId,
                    Entity = FirstNewsEntity,
                    IsCurrentVersion = true,
                    Name = "Ersten neues",
                    Body = "Unseren ersten neues",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now
                };
            }
        }

        public static News FirstNewsContentEn
        {
            get
            {
                return new News
                {
                    Id = FirstNewsContentEnId,
                    Culture = "en",
                    VersionNumber = 1,
                    EntityId = FirstNewsEntityId,
                    Entity = FirstNewsEntity,
                    IsCurrentVersion = true,
                    Name = "First news",
                    Body = "This is our first news item",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now,
                };
            }
        }

        public static News FirstNewsContentEnDeleted
        {
            get
            {
                return new News
                {
                    Id = FirstNewsContentEnDeletedId,
                    Culture = "en",
                    VersionNumber = 3,
                    EntityId = FirstNewsEntityId,
                    Entity = FirstNewsEntity,
                    IsCurrentVersion = false,
                    Name = "First news",
                    Body = "This is an edit of our first news item",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now,
                    DeletedOn = DateTime.Now
                };
            }
        }

        public static News FirstNewsContentEnV2
        {
            get
            {
                return new News
                {
                    Id = FirstNewsContentEnV2Id,
                    Culture = "en",
                    VersionNumber = 2,
                    EntityId = FirstNewsEntityId,
                    Entity = FirstNewsEntity,
                    IsCurrentVersion = false,
                    Name = "First news",
                    Body = "This is an edit of our first news item",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now,
                };
            }
        }

        public static News FirstNewsContentNl
        {
            get
            {
                return new News
                {
                    Id = FirstNewsContentNlId,
                    Culture = "nl",
                    VersionNumber = 1,
                    EntityId = FirstNewsEntityId,
                    Entity = FirstNewsEntity,
                    IsCurrentVersion = true,
                    Name = "Eerste nieuwsbericht",
                    Body = "Dit is ons eerste nieuwsbericht",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now,
                };
            }
        }

        public static News SecondNewsContentEn
        {
            get
            {
                return new News
                {
                    Id = SecondNewsContentEnId,
                    Culture = "en",
                    VersionNumber = 1,
                    EntityId = SecondNewsEntityId,
                    Entity = SecondNewsEntity,
                    IsCurrentVersion = true,
                    Name = "Second news",
                    Body = "The second news item",
                    ExpireTime = DateTime.Now.AddDays(20),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now
                };
            }
        }

        public static News SecondNewsContentNl
        {
            get
            {
                return new News
                {
                    Id = SecondNewsContentNlId,
                    Culture = "nl",
                    VersionNumber = 1,
                    EntityId = SecondNewsEntityId,
                    Entity = SecondNewsEntity,
                    IsCurrentVersion = true,
                    Name = "Tweede nieuwsbericht",
                    Body = "Het tweede nieuwsbericht",
                    ExpireTime = DateTime.Now.AddDays(20),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now
                };
            }
        }

        public static News ThirdNewsContentDe
        {
            get
            {
                return new News
                {
                    Id = ThirdNewsContentDeId,
                    Culture = "de",
                    VersionNumber = 1,
                    EntityId = ThirdNewsEntityId,
                    Entity = ThirdNewsEntity,
                    IsCurrentVersion = true,
                    Name = "Dreiten neues",
                    Body = "Das dreiten neues",
                    ExpireTime = DateTime.Now.AddDays(10),
                    CreatedByUserId = DivingEditorId,
                    CreatedOn = DateTime.Now,
                    UpdatedByUserId = DivingEditorId,
                    UpdatedOn = DateTime.Now,
                };
            }
        }

        #endregion Content

        #region Files

        public static File DiverFile
        {
            get
            {
                return new File
                {
                    Id = DiverImageId,
                    FileName = DiverImageId.ToString(),
                    Extension = "jpg",
                    Tags = new List<Term>()
                };
            }
        }

        public static List<File> Files
        {
            get
            {
                return new List<File> { DiverFile, KarateFile, PigFile };
            }
        }

        public static File KarateFile
        {
            get
            {
                return new File
                {
                    Id = KarateImageId,
                    FileName = KarateImageId.ToString(),
                    Extension = "png",
                    Tags = new List<Term>()
                };
            }
        }

        public static File PigFile
        {
            get
            {
                return new File
                {
                    Id = PigImageId,
                    FileName = PigImageId.ToString(),
                    Extension = "bmp",
                    Tags = new List<Term>()
                };
            }
        }

        #endregion Files

        #region Terms

        public static Vocabulary FileUseVocabulary
        {
            get
            {
                return new Vocabulary
                {
                    Url = CoreVocabulary.FileUse.ToString().ToLower(),
                    Name = CoreVocabulary.FileUse.ToString(),
                    Culture = "en"
                };
            }
        }

        public static Term FirstNewsTerm
        {
            get
            {
                return new Term
                {
                    Url = (FirstNewsEntityId.ToString() + "_" + FirstNewsContentEnId.ToString()).ToLower(),
                    Name = FirstNewsEntityId.ToString() + "_" + FirstNewsContentEnId.ToString(),
                    Vocabulary = FileUseVocabulary,
                    TaggedFiles = new List<File>()
                };
            }
        }

        public static List<Term> Terms
        {
            get
            {
                return new List<Term> { FirstNewsTerm };
            }
        }

        #endregion Terms
    }
}