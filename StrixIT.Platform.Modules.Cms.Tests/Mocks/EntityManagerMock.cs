////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was not generated by a tool. but for stylecop suppression.
//// </auto-generated>
////------------------------------------------------------------------------------
using Moq;
using StrixIT.Platform.Core;
using StrixIT.Platform.Core.Environment;

namespace StrixIT.Platform.Modules.Cms.Tests
{
    public class EntityManagerMock
    {
        #region Private Fields

        private Mock<ICacheService> _cacheMock = new Mock<ICacheService>();
        private DataSourceMock _dataSourceMock = new DataSourceMock();
        private Mock<IEnvironment> _environmentMock = new Mock<IEnvironment>();
        private Mock<IEntityHelper> _helperMock = new Mock<IEntityHelper>();
        private IEntityManager _manager;

        #endregion Private Fields

        #region Public Constructors

        public EntityManagerMock()
        {
            _dataSourceMock.RegisterData<PlatformEntity>(EntityServicesTestData.Entities);
            _dataSourceMock.RegisterData<News>(EntityServicesTestData.Content);
            var userMock = new Mock<IUserContext>();
            var cultureServiceMock = new Mock<ICultureService>();
            cultureServiceMock.Setup(c => c.CurrentCultureCode).Returns("en");
            _environmentMock.Setup(e => e.User).Returns(userMock.Object);
            _environmentMock.Setup(e => e.Cultures).Returns(cultureServiceMock.Object);
            _manager = new EntityManager(_dataSourceMock.Mock.Object, _cacheMock.Object, _environmentMock.Object, _helperMock.Object);
        }

        #endregion Public Constructors

        #region Public Properties

        public Mock<ICacheService> CacheMock
        {
            get
            {
                return _cacheMock;
            }
        }

        public DataSourceMock DataSourceMock
        {
            get
            {
                return _dataSourceMock;
            }
        }

        public IEntityManager EntityManager
        {
            get
            {
                return _manager;
            }
        }

        public Mock<IEnvironment> EnvironmentMock
        {
            get
            {
                return _environmentMock;
            }
        }

        public Mock<IEntityHelper> HelperMock
        {
            get
            {
                return _helperMock;
            }
        }

        #endregion Public Properties
    }
}