////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was not generated by a tool. but for stylecop suppression.
//// </auto-generated>
////------------------------------------------------------------------------------
using Moq;
using StrixIT.Platform.Modules.Cms;
using StrixIT.Platform.Core;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace StrixIT.Platform.Modules.Cms.Tests
{
    public class EntityServiceMock<TModel> where TModel : EntityViewModel
    {
        private IEntityService<TModel> _service;
        private EntityManagerMock _entityManagerMock = new EntityManagerMock();
        private TaxonomyManagerMock _taxonomyManagerMock = new TaxonomyManagerMock();
        private DataSourceMock _dataSourceMock = new DataSourceMock();
        private Mock<ICacheService> _cacheMock = new Mock<ICacheService>();

        public EntityServiceMock()
        {
            _service = Activator.CreateInstance(typeof(EntityService<>).MakeGenericType(typeof(TModel)), _dataSourceMock.Mock.Object, _entityManagerMock.EntityManager, _taxonomyManagerMock.TaxonomyManager, _cacheMock.Object) as IEntityService<TModel>;
        }

        public IEntityService<TModel> EntityService
        {
            get
            {
                return _service;
            }
        }

        public EntityManagerMock EntityManagerMock
        {
            get
            {
                return _entityManagerMock;
            }
        }

        public TaxonomyManagerMock TaxonomyManagerMock
        {
            get
            {
                return _taxonomyManagerMock;
            }
        }

        public DataSourceMock DataSourceMock
        {
            get
            {
                return _dataSourceMock;
            }
        }

        public Mock<ICacheService> CacheMock
        {
            get
            {
                return _cacheMock;
            }
        }
    }
}
